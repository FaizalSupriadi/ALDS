Opdr 1.3
Het algoritme zorgt ervoor dat de sum wordt uitgerekend door steeds het 1ste tot laatste cijfer op te tellen en steeds verhalft. 
Als de sum groter is dan max krijgt de sum de waarde van max en stopt het in de result

Opdr 1.4
Expression			Dominant term(s)	O(…)
5 + 0.001n^ 3 + 0.025n		0.001n^3		O(n^3)
500n + 100n ^1.5 + 50n · log(n)	100n^1.5		O(n^1.5)
0.3n + 5n ^1.5 + 2.5 · n1.75	5n^1.5			O(n^1.5)
n ^2 log(n) + n(log(n))^2	n(log(n))^2		O(n log ^2 n)
nlog(n) + nlog(n)		nlog(n)			O(n log n)
100n + 0.01n^2			0.01n^2			O(n^2)
0.01n + 100n^2			100n^2			O(n^2)
2n + n^0.5 + 0.5n^1.25		0.5n^1.25		O(n^1.25)

Opdr 1.5
21: O(N)
22: O(N^2)
23: O(N^2 +M^2)
24: O(N^3)
25: O(2N)
26: O(N)

Opdr 1.9
1. Ik zou proberen om alle getallen door te gaan en kijken of het kan delen door ander getallen doormiddel van modulos(%)
2. O(N)
3. See code
4. O(N)

1.10